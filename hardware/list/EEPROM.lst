C51 COMPILER V9.00   EEPROM                                                                03/30/2016 22:59:21 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\obj\EEPROM.obj
COMPILER INVOKED BY: D:\Program Files (x86)\KeilC51\C51\BIN\C51.EXE 源码\EEPROM.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\list\EEPROM.lst) OBJECT(.\obj\EEPROM.obj)

line level    source

   1          #include "config.h"
   2                  
   3          ///* 定义命令 */
   4          //#define RdCommand      0x01        /*  字节读数据存储区   */
   5          //#define PrgCommand     0x02        /*  字节编程数据存储区 */
   6          //#define EraseCommand   0x03        /*  扇区擦除数据存储区 */
   7          ////
   8          ///* 定义常量 */
   9          ////#define ERROR   0
  10          ////#define OK      1
  11          ////#define  Waittime     0x01               /* 定义Flash 操作等待时间*/ 
  12          /* 新增特殊功能寄存器定义*/
  13          sfr     ISP_DATA    =   0xe2;  // ISP/IAP操作时的数据寄存器
  14          sfr     ISP_ADDRH   =   0xe3;  // ISP/IAP操作时的地址high
  15          sfr     ISP_ADDRL   =   0xe4;  // ISP/IAP操作时的地址low
  16          sfr     ISP_CMD     =   0xe5;  // ISP/IAP操作时的命令寄存器
  17          sfr     ISP_TRIG    =   0xe6;  // ISP/IAP操作时的命令触发寄存器
  18          sfr     ISP_CONTR   =   0xe7;  // ISP/IAP控制寄存器
  19          
  20          
  21          /**************打开 ISP,IAP 功能************************/
  22          
  23          //void ISP_IAP_enable(void)
  24          //{
  25          //    EA    =    0;                                /* 关中断 */
  26          //    ISP_CONTR  =  ISP_CONTR & 0x18;       /* 0001,1000 ISPEN=0 禁止编程改变FLASH*/
  27          //    ISP_CONTR  =  ISP_CONTR | Waittime;    /* 0000,0001 WT2=0,WT1=0,WT0=1,20M   */
  28          //    ISP_CONTR  =  ISP_CONTR | 0x80;       /* 1000,0000 ISPEN=1 允许编程改变FLASH*/
  29          //}                                            
  30          ///***************************关闭 ISP,IAP 功能***************************/
  31          //void ISP_IAP_disable(void)
  32          //{
  33          //    ISP_CONTR    =    ISP_CONTR & 0x7f;    /* 0111,1111 ISPEN=0 禁止编程改变FLASH*/
  34          //    ISP_TRIG     =    0x00;                /* TRIG复位时数值不定，这里付值0X00   */
  35          //    EA           =    1;                    /* 开中断 */
  36          //}
  37          void Q0()
  38          {
  39   1          ISP_CONTR = 0;            // 关闭IAP功能
  40   1          ISP_CMD   = 0;            // 待机模式，无ISP操作
  41   1          ISP_TRIG  = 0;            // 关闭IAP功能, 清与ISP有关的特殊功能寄存器 
  42   1      }
  43          /************************字节读****************************/
  44          uchar ISP_ReadByte(uint byte_addr)
  45          {
  46   1          uchar dat;
  47   1              
  48   1              ISP_CONTR = 0x81;                 
  49   1          ISP_CMD   = 0x01;         // 用户可以对"Data Flash/EEPROM区"进行字节读
  50   1          ISP_ADDRL = byte_addr;         
  51   1          ISP_ADDRH = byte_addr>>8;      
  52   1       //   EA = 0;
  53   1          ISP_TRIG = 0x46;          
  54   1          ISP_TRIG = 0xB9;          
C51 COMPILER V9.00   EEPROM                                                                03/30/2016 22:59:21 PAGE 2   

  55   1          _nop_();
  56   1          dat = ISP_DATA;                       // 取出数据
  57   1              Q0();                                     // 关闭ISP/IAP                  
  58   1              return dat;
  59   1      }
  60          /*************************扇区删除**************************/
  61          void ISP_EraseSector(uint sector_addr)
  62          {
  63   1          ISP_CONTR = 0x81;         // 打开 IAP 功能(ISPEN(ISP_CONTR.7)=1:允许编程改变Flash, 设置 Flash 操作等待时
             -间。
  64   1          ISP_CMD   = 0x03;             // 用户可以对"Data Flash/EEPROM区"进行扇区擦除
  65   1          ISP_ADDRL = sector_addr;         // ISP/IAP操作时的地址寄存器低八位，
  66   1          ISP_ADDRH = sector_addr>>8;      // ISP/IAP操作时的地址寄存器高八位。 
  67   1      //      EA =0;   
  68   1          ISP_TRIG = 0x46;          // 在ISPEN(ISP_CONTR.7)=1时,对ISP_TRIG先写入46h，
  69   1          ISP_TRIG = 0xB9;          // 再写入B9h,ISP/IAP命令才会生效。
  70   1          _nop_();
  71   1          Q0();       
  72   1      }
  73          /***********************字节写**********************/
  74          void ISP_WriteByte(uint byte_addr, uchar original_data)
  75          {
  76   1          ISP_CONTR = 0x81;             
  77   1          ISP_CMD   = 0x02;         // 用户可以对"Data Flash/EEPROM区"进行字节编程
  78   1          ISP_ADDRL = byte_addr;        
  79   1          ISP_ADDRH = byte_addr>>8;      
  80   1          ISP_DATA  = original_data;          // 数据进ISP_DATA
  81   1      //    EA = 0;
  82   1          ISP_TRIG = 0x46;          
  83   1          ISP_TRIG = 0xB9;          
  84   1          _nop_();
  85   1          Q0();       
  86   1      }
  87          
  88          
  89          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     78    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
