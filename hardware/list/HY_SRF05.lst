C51 COMPILER V9.00   HY_SRF05                                                              08/06/2015 10:37:58 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE HY_SRF05
OBJECT MODULE PLACED IN .\obj\HY_SRF05.obj
COMPILER INVOKED BY: D:\Program Files (x86)\KeilC51\C51\BIN\C51.EXE 源码\HY_SRF05.c BROWSE DEBUG OBJECTEXTEND PRINT(.\li
                    -st\HY_SRF05.lst) OBJECT(.\obj\HY_SRF05.obj)

line level    source

   1          #include "config.h"
   2          
   3          
   4          sbit Trig  = P2^6;//P2^0;       //产生脉冲引脚
   5          sbit Echo  = P3^3;      //回波引脚,中断1
   6          
   7          
   8          uchar outcomeH,outcomeL;  //自定义寄存器
   9          bit succeed_flag;  //测量成功标志
  10          uint distance_data;
  11          /********************************************************************
  12          * 名称 : 
  13          * 功能 : 
  14          * 输入 : 无
  15          * 输出 : 无
  16          ***********************************************************************/
  17          void HYSRF05_Init()
  18          {
  19   1              Trig=0;       //首先拉低脉冲输入引脚
  20   1      
  21   1              TMOD=0x10;      //定时器1，16位工作方式
  22   1              IT1=0;                  //由高电平变低电平，触发外部中断 ，中断1
  23   1      }
  24          /********************************************************************
  25          * 名称 : 
  26          * 功能 : 
  27          * 输入 : 无
  28          * 输出 : 无
  29          ***********************************************************************/
  30          /***********************************外部中断1，用做判断回波电平***************************************/
  31          INTO_()  interrupt 2   // 外部中断是1号
  32          {    
  33   1           outcomeH =TH1;    //取出定时器的值
  34   1           outcomeL =TL1;    //取出定时器的值
  35   1           succeed_flag=1;   //至成功测量的标志
  36   1           EX1=0;            //关闭外部中断
  37   1      }
  38          /********************************************************************
  39          * 名称 : 
  40          * 功能 : 
  41          * 输入 : 无
  42          * 输出 : 无
  43          ***********************************************************************/
  44          void delay_20us()
  45          {  uchar bt ;
  46   1          for(bt=0;bt<100;bt++);
  47   1      }
  48          uint HYSRF05_GetDistan()
  49          {
  50   1              Trig=1;
  51   1              delay_20us();
  52   1              Trig=0;         //产生一个20us的脉冲，在Trig引脚 
  53   1          while(Echo==0); //等待Echo回波引脚变高电平
  54   1              succeed_flag=0; //清测量成功标志
C51 COMPILER V9.00   HY_SRF05                                                              08/06/2015 10:37:58 PAGE 2   

  55   1              TH1=0;          //定时器1清零
  56   1          TL1=0;          //定时器1清零
  57   1              TF1=0;          //
  58   1          TR1=1;          //启动定时器1
  59   1              EA=1;
  60   1              EX1=1;          //打开外部中断
  61   1      
  62   1              while(TH1 < 0xf0);      //等待测量的结果，周期  可以用延时：比如delay(100);
  63   1              TR1=0;                  //关闭定时器1
  64   1              EX1=0;          //关闭外部中断
  65   1      
  66   1              if(succeed_flag==1)       //测量成功
  67   1              {       
  68   2                      float aa,bb;
  69   2                      distance_data=outcomeH;                         //测量结果的高8位
  70   2                      distance_data<<=8;                                      //放入16位的高8位
  71   2                      distance_data=distance_data|outcomeL;   //与低8位合并成为16位结果数据
  72   2      
  73   2                      #if 0
                                      aa=(float)distance_data;
                                      bb=aa*(331.3+0.606*Get18B20_Temp()/10)/20000;    //bb是距离，aa是发射与接收之间的时间
                                      distance_data=bb;
                              #else
  78   2                              distance_data*=12;
  79   2                              distance_data/=58;
  80   2                      #endif
  81   2              }
  82   1              else
  83   1              {
  84   2                      distance_data=0;  
  85   2              }   
  86   1      
  87   1              return distance_data;
  88   1      }
*** WARNING C280 IN LINE 68 OF 源码\HY_SRF05.C: 'aa': unreferenced local variable
*** WARNING C280 IN LINE 68 OF 源码\HY_SRF05.C: 'bb': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    118    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
