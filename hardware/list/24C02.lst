C51 COMPILER V9.54   24C02                                                                 01/15/2018 17:52:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE 24C02
OBJECT MODULE PLACED IN .\hex\24C02.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 源码\24C02.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\l
                    -ist\24C02.lst) TABS(2) OBJECT(.\hex\24C02.obj)

line level    source

   1          
   2          /********************************************************
   3          这个文件的函数是关于AT24C02和单片机的通信的驱动函数，采用的是模拟的IIC通信协议，具体可以百度一下
   4          主要的功能就是用来保存IC卡的卡号的，掉电是不会丢失的。
   5          所以这个文件的函数你可以不需要看懂，知道是用来做什么的就行
   6          *************************************************************/
   7          
   8          #include "config.h"
   9          
  10          sbit SDA=P2^0;            //模拟I2C数据传送位
  11          sbit SCL=P2^1;            //模拟I2C时钟控制位
  12          
  13          
  14          #define  _Nop()  _nop_()        //定义空指令
  15          
  16          
  17          bit ack;                //应答标志位
  18          
  19          #define ADDRESS_SLA  0XAE
  20          
  21          static void DelayUs2x(unsigned char t);//函数声明 
  22          static void DelayMs(unsigned char t);
  23          
  24          /*------------------------------------------------
  25           uS延时函数，含有输入参数 unsigned char t，无返回值
  26           unsigned char 是定义无符号字符变量，其值的范围是
  27           0~255 这里使用晶振12M，精确延时请使用汇编,大致延时
  28           长度如下 T=tx2+5 uS 
  29          ------------------------------------------------*/
  30          static void DelayUs2x(unsigned char t)
  31          {   
  32   1       while(--t);
  33   1      }
  34          /*------------------------------------------------
  35           mS延时函数，含有输入参数 unsigned char t，无返回值
  36           unsigned char 是定义无符号字符变量，其值的范围是
  37           0~255 这里使用晶振12M，精确延时请使用汇编
  38          ------------------------------------------------*/
  39          static void DelayMs(unsigned char t)
  40          {
  41   1           
  42   1       while(t--)
  43   1       {
  44   2           //大致延时1mS
  45   2           DelayUs2x(245);
  46   2         DelayUs2x(245);
  47   2       }
  48   1      }
  49          /*------------------------------------------------
  50                              启动总线
  51          ------------------------------------------------*/
  52          void Start_I2c()
  53          {
  54   1        SDA=1;   //发送起始条件的数据信号
C51 COMPILER V9.54   24C02                                                                 01/15/2018 17:52:47 PAGE 2   

  55   1        _Nop();
  56   1        SCL=1;
  57   1        _Nop();    //起始条件建立时间大于4.7us,延时
  58   1        _Nop();
  59   1        _Nop();
  60   1        _Nop();
  61   1        _Nop();    
  62   1        SDA=0;     //发送起始信号
  63   1        _Nop();    //起始条件锁定时间大于4μ
  64   1        _Nop();
  65   1        _Nop();
  66   1        _Nop();
  67   1        _Nop();       
  68   1        SCL=0;    //钳住I2C总线，准备发送或接收数据
  69   1        _Nop();
  70   1        _Nop();
  71   1      }
  72          /*------------------------------------------------
  73                              结束总线
  74          ------------------------------------------------*/
  75          void Stop_I2c()
  76          {
  77   1        SDA=0;    //发送结束条件的数据信号
  78   1        _Nop();   //发送结束条件的时钟信号
  79   1        SCL=1;    //结束条件建立时间大于4μ
  80   1        _Nop();
  81   1        _Nop();
  82   1        _Nop();
  83   1        _Nop();
  84   1        _Nop();
  85   1        SDA=1;    //发送I2C总线结束信号
  86   1        _Nop();
  87   1        _Nop();
  88   1        _Nop();
  89   1        _Nop();
  90   1      }
  91          
  92          
  93          
  94          
  95          /*----------------------------------------------------------------
  96                           字节数据传送函数               
  97          函数原型: void  SendByte(unsigned char c);
  98          功能:  将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  99               此状态位进行操作.(不应答或非应答都使ack=0 假)     
 100               发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
 101          ------------------------------------------------------------------*/
 102          void  SendByte(unsigned char c)
 103          {
 104   1       unsigned char BitCnt;
 105   1       
 106   1       for(BitCnt=0;BitCnt<8;BitCnt++)  //要传送的数据长度为8位
 107   1          {
 108   2           if((c<<BitCnt)&0x80)SDA=1;   //判断发送位
 109   2             else  SDA=0;                
 110   2           _Nop();
 111   2           SCL=1;               //置时钟线为高，通知被控器开始接收数据位
 112   2            _Nop(); 
 113   2            _Nop();             //保证时钟高电平周期大于4μ
 114   2            _Nop();
 115   2            _Nop();
 116   2            _Nop();         
C51 COMPILER V9.54   24C02                                                                 01/15/2018 17:52:47 PAGE 3   

 117   2           SCL=0; 
 118   2          }
 119   1          
 120   1          _Nop();
 121   1          _Nop();
 122   1          SDA=1;               //8位发送完后释放数据线，准备接收应答位
 123   1          _Nop();
 124   1          _Nop();   
 125   1          SCL=1;
 126   1          _Nop();
 127   1          _Nop();
 128   1          _Nop();
 129   1          if(SDA==1)ack=0;     
 130   1             else ack=1;        //判断是否接收到应答信号
 131   1          SCL=0;
 132   1          _Nop();
 133   1          _Nop();
 134   1      }
 135          
 136          
 137          
 138          
 139          
 140          
 141          
 142          /*----------------------------------------------------------------
 143                           字节数据传送函数               
 144          函数原型: unsigned char  RcvByte();
 145          功能:  用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 146               发完后请用应答函数。  
 147          ------------------------------------------------------------------*/  
 148          unsigned char  RcvByte()
 149          {
 150   1        unsigned char retc;
 151   1        unsigned char BitCnt;
 152   1        
 153   1        retc=0; 
 154   1        SDA=1;             //置数据线为输入方式
 155   1        for(BitCnt=0;BitCnt<8;BitCnt++)
 156   1            {
 157   2              _Nop();           
 158   2              SCL=0;       //置时钟线为低，准备接收数据位
 159   2              _Nop();
 160   2              _Nop();      //时钟低电平周期大于4.7us
 161   2              _Nop();
 162   2              _Nop();
 163   2              _Nop();
 164   2              SCL=1;       //置时钟线为高使数据线上数据有效
 165   2              _Nop();
 166   2              _Nop();
 167   2              retc=retc<<1;
 168   2              if(SDA==1)retc=retc+1; //读数据位,接收的数据位放入retc中
 169   2              _Nop();
 170   2              _Nop(); 
 171   2            }
 172   1        SCL=0;    
 173   1        _Nop();
 174   1        _Nop();
 175   1        return(retc);
 176   1      }
 177          
 178          
C51 COMPILER V9.54   24C02                                                                 01/15/2018 17:52:47 PAGE 4   

 179          
 180          /*----------------------------------------------------------------
 181                               应答子函数
 182          原型:  void Ack_I2c(void);
 183           
 184          ----------------------------------------------------------------*/
 185          void Ack_I2c(void)
 186          {
 187   1        
 188   1        SDA=0;     
 189   1        _Nop();
 190   1        _Nop();
 191   1        _Nop();      
 192   1        SCL=1;
 193   1        _Nop();
 194   1        _Nop();              //时钟低电平周期大于4μ
 195   1        _Nop();
 196   1        _Nop();
 197   1        _Nop();  
 198   1        SCL=0;               //清时钟线，钳住I2C总线以便继续接收
 199   1        _Nop();
 200   1        _Nop();    
 201   1      }
 202          /*----------------------------------------------------------------
 203                               非应答子函数
 204          原型:  void NoAck_I2c(void);
 205           
 206          ----------------------------------------------------------------*/
 207          void NoAck_I2c(void)
 208          {
 209   1        
 210   1        SDA=1;
 211   1        _Nop();
 212   1        _Nop();
 213   1        _Nop();      
 214   1        SCL=1;
 215   1        _Nop();
 216   1        _Nop();              //时钟低电平周期大于4μ
 217   1        _Nop();
 218   1        _Nop();
 219   1        _Nop();  
 220   1        SCL=0;                //清时钟线，钳住I2C总线以便继续接收
 221   1        _Nop();
 222   1        _Nop();    
 223   1      }
 224          /*----------------------------------------------------------------
 225                              向无子地址器件发送字节数据函数               
 226          函数原型: bit  ISendByte(unsigned char sla,ucahr c);  
 227          功能:     从启动总线到发送地址，数据，结束总线的全过程,从器件地址sla.
 228                     如果返回1表示操作成功，否则操作有误。
 229          注意：    使用前必须已结束总线。
 230          ----------------------------------------------------------------*/
 231          bit x24c02ISendByte(unsigned char sla,unsigned char c)
 232          {
 233   1         Start_I2c();               //启动总线
 234   1         SendByte(ADDRESS_SLA);
 235   1         if(ack==0)return(0);
 236   1         SendByte(sla);             //发送器件地址
 237   1           if(ack==0)return(0);
 238   1         SendByte(c);               //发送数据
 239   1           if(ack==0)return(0);
 240   1        Stop_I2c();                 //结束总线
C51 COMPILER V9.54   24C02                                                                 01/15/2018 17:52:47 PAGE 5   

 241   1        return(1);
 242   1      }
 243          
 244          /*----------------------------------------------------------------
 245                              向有子地址器件发送多字节数据函数               
 246          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 247          功能:     从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 248                    地址sla，子地址suba，发送内容是s指向的内容，发送no个字节。
 249                     如果返回1表示操作成功，否则操作有误。
 250          注意：    使用前必须已结束总线。
 251          ----------------------------------------------------------------*/
 252          bit x24c02ISendStr(unsigned char suba,unsigned char *s,unsigned char no)
 253          {
 254   1         unsigned char i;
 255   1      
 256   1         Start_I2c();               //启动总线
 257   1         SendByte(ADDRESS_SLA);             //发送器件地址
 258   1           if(ack==0)return(0);
 259   1         SendByte(suba);            //发送器件子地址
 260   1           if(ack==0)return(0);
 261   1      
 262   1         for(i=0;i<no;i++)
 263   1          {   
 264   2           SendByte(*s);            //发送数据
 265   2           DelayMs(1);
 266   2             if(ack==0)return(0);
 267   2           s++;
 268   2          } 
 269   1       Stop_I2c();                  //结束总线
 270   1        return(1);
 271   1      }
 272          /*----------------------------------------------------------------
 273                              向无子地址器件读字节数据函数               
 274          函数原型: bit  IRcvByte(unsigned char sla,ucahr *c);  
 275          功能:     从启动总线到发送地址，读数据，结束总线的全过程,从器件地
 276                    址sla，返回值在c.
 277                     如果返回1表示操作成功，否则操作有误。
 278          注意：    使用前必须已结束总线。
 279          ----------------------------------------------------------------*/
 280          bit x24c02IRcvByte(unsigned char sla,unsigned char *c)
 281          {
 282   1         Start_I2c();                //启动总线
 283   1         SendByte(ADDRESS_SLA);
 284   1         if(ack==0)return(0);
 285   1         SendByte(sla);            //发送器件地址
 286   1           if(ack==0)return(0);
 287   1      
 288   1         Start_I2c();
 289   1         SendByte(ADDRESS_SLA+1);
 290   1         if(ack==0)return(0);
 291   1         *c=RcvByte();               //读取数据
 292   1           NoAck_I2c();              //发送非就答位
 293   1           Stop_I2c();               //结束总线
 294   1        return(1);
 295   1      }
 296          
 297          
 298          /*----------------------------------------------------------------
 299                              向有子地址器件读取多字节数据函数               
 300          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 301          功能:     从启动总线到发送地址，子地址,读数据，结束总线的全过程,从器件
 302                    地址sla，子地址suba，读出的内容放入s指向的存储区，读no个字节。
C51 COMPILER V9.54   24C02                                                                 01/15/2018 17:52:47 PAGE 6   

 303                     如果返回1表示操作成功，否则操作有误。
 304          注意：    使用前必须已结束总线。
 305          ----------------------------------------------------------------*/
 306          bit x24c02IRcvStr(unsigned char suba,unsigned char *s,unsigned char no)
 307          {
 308   1         unsigned char i;
 309   1      
 310   1         Start_I2c();               //启动总线
 311   1         SendByte(ADDRESS_SLA);             //发送器件地址
 312   1           if(ack==0)return(0);
 313   1         SendByte(suba);            //发送器件子地址
 314   1           if(ack==0)return(0);
 315   1      
 316   1         Start_I2c();
 317   1         SendByte(ADDRESS_SLA+1);
 318   1            if(ack==0)return(0);
 319   1      
 320   1         for(i=0;i<no-1;i++)
 321   1          {   
 322   2           *s=RcvByte();              //发送数据
 323   2            Ack_I2c();                //发送就答位 
 324   2           s++;
 325   2          } 
 326   1         *s=RcvByte();
 327   1          NoAck_I2c();                 //发送非应位
 328   1         Stop_I2c();                    //结束总线
 329   1        return(1);
 330   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    414    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
